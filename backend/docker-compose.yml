version: "3"

services:
  api-gateway:
    container_name: api-gateway
    build: ./api-gateway
    environment:
      NODE_ENV: production
    env_file:
      - ./api-gateway/.env
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
    networks:
      - backend-network

  auth-service:
    container_name: auth-service
    build: ./auth-service
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
    env_file:
      - ./auth-service/.env
    depends_on:
      - postgres
      - email-service
    networks:
      - backend-network

  email-service:
    container_name: email-service
    build: ./email-service
    environment:
      - NODE_ENV=production
    expose:
      - "3000"
    env_file:
      - ./email-service/.env
    networks:
      - backend-network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge

volumes:
  postgres_data:
